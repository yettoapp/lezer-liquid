@top LiquidText { Expression | Statement }
@skip { whitespace }
@precedence {
  whitespace,
  cond,
  comp,
  identifier,
  Literal,
  and @left,
  or @left
}

list<item> { item ("," item)* }
kw<term> { @specialize[@name={term}]<identifier, term> }

Expression {
  Identifier (PropertyAccessor | IndexAccessor)* |
  Literal
}

Literal { Boolean | Number | String }
String { string }
Boolean { kw<"true"> | kw<"false"> }
Identifier { identifier }

PropertyAccessor {
  "." Identifier
}

IndexAccessor {
  IndexOpen { "[" }
  Index
  IndexClose { "]" }
}

Statement { FilterStatement | ConditionalStatement }

FilterStatement {
  Expression
  (LiquidFilterSeparator { "|" }
  FilterName { Identifier }
  (":" Args)?)+
}

Args { Arg ("," Arg)* }
Arg { Parg | Kwarg }
Parg { Literal | Identifier (PropertyAccessor | IndexAccessor)* }
Kwarg { Identifier ":" Parg }

ConditionalStatement { Conditional Bool }
Bool { Expression (Comparison)? (LogicalOperator Bool)* }
Comparison { ComparisonOperator Expression }
Conditional {  !cond (kw<"if"> | kw<"unless"> | kw<"elsif">) }
ComparisonOperator { !comp ("==" | "<" | ">" | "<=" | ">=" | "!=" | "<>" | kw<"contains">) }
LogicalOperator { !and kw<"and"> | !or kw<"or"> }
Alternative { "else" FilterStatement }

@tokens {
  Number { '-'? int frac?  }
  int  { '0' | $[1-9] @digit* }
  frac { '.' @digit+ }

  Index { @digit+ }

  string { '"' char* '"' | "'" char* "'" }
  char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] }

  letter { $[_a-zA-Z\u00A1-\u00ff] }
  identifier { letter (letter | @digit)* }

  whitespace { $[ \n\r\t] }
}

